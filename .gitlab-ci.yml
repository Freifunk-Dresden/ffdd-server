stages:
  - init
  - build
  - test
  - deploy


docker:ffdd-debian9:
  except:
    - schedules
  image: debian:9
  stage: build
  script:
    - cd .ci
    - bash install_deps.sh
    - bash build_uci.sh
    - bash build_bmxd.sh
  artifacts:
    paths:
      - .ci/build/*.deb
    expire_in: 24 hour
  tags:
    - docker2

ffdd-debian9-staging:
  stage: deploy
  image: debian:10
  only:
    - master
  dependencies:
    - docker:ffdd-debian9
  before_script:
    - apt-get update -y && apt-get install -y openssh-client rsync
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh ; chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan $HOST >> ~/.ssh/known_hosts
  script:
    - rsync -avz .ci/build/* "$USER"@"$HOST":"$RPATH"/debian9/
    - ssh "$USER"@"$HOST" "sudo -Hu root rsync --remove-source-files -avz $RPATH/debian9/* $DLPATH/debian9/"
  tags:
    - docker2


docker:ffdd-debian10:
  except:
    - schedules
  image: debian:10
  stage: build
  script:
    - cd .ci
    - bash install_deps.sh
    - bash build_uci.sh
    - bash build_bmxd.sh
  artifacts:
    paths:
      - .ci/build/*.deb
    expire_in: 24 hour
  tags:
    - docker2

ffdd-debian10-staging:
  stage: deploy
  image: debian:10
  only:
    - master
  dependencies:
    - docker:ffdd-debian10
  before_script:
    - apt-get update -y && apt-get install -y openssh-client rsync
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh ; chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan $HOST >> ~/.ssh/known_hosts
  script:
    - rsync -avz .ci/build/* "$USER"@"$HOST":"$RPATH"/debian10/
    - ssh "$USER"@"$HOST" "sudo -Hu root rsync --remove-source-files -avz $RPATH/debian10/* $DLPATH/debian10/"
  tags:
    - docker2


docker:ffdd-ubuntu1604:
  except:
    - schedules
  image: ubuntu:16.04
  stage: build
  script:
    - cd .ci
    - bash install_deps.sh
    - bash build_uci.sh
    - bash build_bmxd.sh
  artifacts:
    paths:
      - .ci/build/*.deb
    expire_in: 24 hour
  tags:
    - docker2

ffdd-ubuntu1604-staging:
  stage: deploy
  image: debian:10
  only:
    - master
  dependencies:
    - docker:ffdd-ubuntu1604
  before_script:
    - apt-get update -y && apt-get install -y openssh-client rsync
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh ; chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan $HOST >> ~/.ssh/known_hosts
  script:
    - rsync -avz .ci/build/* "$USER"@"$HOST":"$RPATH"/ubuntu16/
    - ssh "$USER"@"$HOST" "sudo -Hu root rsync --remove-source-files -avz $RPATH/ubuntu16/* $DLPATH/ubuntu16/"
  tags:
    - docker2


docker:ffdd-ubuntu1804:
  except:
    - schedules
  image: ubuntu:18.04
  stage: build
  script:
    - cd .ci
    - bash install_deps.sh
    - bash build_uci.sh
    - bash build_bmxd.sh
  artifacts:
    paths:
      - .ci/build/*.deb
    expire_in: 24 hour
  tags:
    - docker2

ffdd-ubuntu1804-staging:
  stage: deploy
  image: debian:10
  only:
    - master
  dependencies:
    - docker:ffdd-ubuntu1804
  before_script:
    - apt-get update -y && apt-get install -y openssh-client rsync
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh ; chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan "$HOST" >> ~/.ssh/known_hosts
  script:
    - rsync -avz .ci/build/* "$USER"@"$HOST":"$RPATH"/ubuntu18/
    - ssh "$USER"@"$HOST" "sudo -Hu root rsync --remove-source-files -avz $RPATH/ubuntu18/* $DLPATH/ubuntu18/"
  tags:
    - docker2
